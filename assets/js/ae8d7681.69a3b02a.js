"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9947],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>v});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),l=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(i.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,i=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=l(n),d=a,v=u["".concat(i,".").concat(d)]||u[d]||m[d]||s;return n?r.createElement(v,o(o({ref:t},p),{},{components:n})):r.createElement(v,o({ref:t},p))}));function v(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,o=new Array(s);o[0]=d;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c[u]="string"==typeof e?e:a,o[1]=c;for(var l=2;l<s;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4232:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>m,frontMatter:()=>s,metadata:()=>c,toc:()=>l});var r=n(7462),a=(n(7294),n(3905));const s={slug:"rx-js-sap-composable-storefront-events",title:"RxJS Spartacus Analytics",authors:"dradu",tags:["rxjs","sap-composable-storefront","spartacus","angular","analytics"]},o="Spartacus configuration goes into spartacus-configuration.module.ts",c={permalink:"/blog/rx-js-sap-composable-storefront-events",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2023-07-12-rx-js-sap-composable-storefront-analytics.md",source:"@site/blog/2023-07-12-rx-js-sap-composable-storefront-analytics.md",title:"RxJS Spartacus Analytics",description:"_clear flag is required to disable automatic object merging by GTM dataLayer on SPA",date:"2023-07-12T00:00:00.000Z",formattedDate:"July 12, 2023",tags:[{label:"rxjs",permalink:"/blog/tags/rxjs"},{label:"sap-composable-storefront",permalink:"/blog/tags/sap-composable-storefront"},{label:"spartacus",permalink:"/blog/tags/spartacus"},{label:"angular",permalink:"/blog/tags/angular"},{label:"analytics",permalink:"/blog/tags/analytics"}],readingTime:1.435,hasTruncateMarker:!1,authors:[{name:"Dan Radu",title:"Freelancer",url:"https://danradu.ro",imageURL:"https://github.com/xdanradu.png",key:"dradu"}],frontMatter:{slug:"rx-js-sap-composable-storefront-events",title:"RxJS Spartacus Analytics",authors:"dradu",tags:["rxjs","sap-composable-storefront","spartacus","angular","analytics"]},prevItem:{title:"RxJS Event Forwarding",permalink:"/blog/rx-js-event-forwarding"},nextItem:{title:"RxJS Loading Flag",permalink:"/blog/rx-js-loading-flag"}},i={authorsImageUrls:[void 0]},l=[],p={toc:l},u="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"    provideConfig({\n      tagManager: {\n        gtm: {\n          events: [TmsAnalyticsEvent],\n          gtmId: 'XXX'\n        }\n      }\n    } as TmsConfig)\n")),(0,a.kt)("h1",{id:"custom-event-that-extends-cxevent"},"Custom event that extends CxEvent"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"export class TmsAnalyticsEvent extends CxEvent {\n  event: string;\n  _clear: boolean;\n\n  constructor(eventName: string) {\n    super();\n    this.event = eventName;\n    this._clear = true;\n  }\n}\n")),(0,a.kt)("p",null,"_clear flag is required to disable automatic object merging by GTM dataLayer on SPA\nSource: ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/google/data-layer-helper#preventing-default-recursive-merge"},"https://github.com/google/data-layer-helper#preventing-default-recursive-merge")),(0,a.kt)("h1",{id:"custom-interface-to-map-spa-with-tms"},"Custom interface to map SPA with TMS"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"export enum TmsEventName {\n  viewCart = 'view_cart',\n  addToCart = 'add_to_cart'\n}\nexport interface TmsCustomPayload {\n  checkout_type: string;\n  currency: string;\n  items: TmsProduct[];\n}\n\nexport class TmsCustomEvent extends TmsAnalyticsEvent {\n  ecommerce: TmsCustomPayload;\n  constructor(eventName: TmsEventName, payload: TmsCustomPayload) {\n    super(eventName);\n    this.ecommerce = payload;\n  }\n}\n")),(0,a.kt)("h1",{id:"custom-services-that-capture-default-events-and-dispatch-tmsanalyticsevent"},"Custom services that capture default events and dispatch TmsAnalyticsEvent"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"export abstract class CustomAnalyticsEventService {\n  protected subscriptions = new Subscription();\n\n  abstract enableTracking(): void;\n  destroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n\n@Injectable({ providedIn: 'root' })\n             export class CustomViewCartEventService extends CustomAnalyticsEventService {\n               constructor(protected events: EventService, protected cartService: ActiveCartService) {\n                 super();\n               }\n             \n               enableTracking(): void {\n                 this.subscriptions.add(\n                   this.events.get(CartPageEvent).subscribe((_) => {\n                     this.cartService.getActive().pipe(take(1)).subscribe(\n                        data => {\n                          //here we can map it to the required interface\n                          const payload = data;\n                          this.events.dispatch(new TmsCustomEvent(TmsEventName.viewCart, payload));\n                        }\n                     )\n                   })\n                 );\n               }\n             }\n")),(0,a.kt)("h1",{id:"core-service-that-enable-required-events"},"Core service that enable required events"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"@Injectable({ providedIn: 'root' })\nexport class CustomAnalyticsService {\n  constructor(\n    protected viewCartEventService: CustomViewCartEventService,\n    protected addToCartEventService: CustomAddToCartEventService\n  ) {}\n\n  trackEvents(): void {\n    this.viewCartEventService.enableTracking();\n    this.addToCartEventService.enableTracking();\n  }\n\n  destroy(): void {\n    this.viewCartEventService.destroy();\n    this.addToCartEventService.destroy();\n  }\n}\n")),(0,a.kt)("h1",{id:"enable-analytics-service-from-app-component"},"Enable analytics service from app component"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  constructor(protected customAnalyticsService: CustomAnalyticsService) {}\n\n  public ngOnInit(): void {\n    if (ENVIRONMENT.analyticsEnabled) {\n      this.customAnalyticsService.trackEvents();\n    }\n  }\n\n  public ngOnDestroy(): void {\n    if (ENVIRONMENT.analyticsEnabled) {\n      this.customAnalyticsService.destroy();\n    }\n  }\n}\n")))}m.isMDXComponent=!0}}]);