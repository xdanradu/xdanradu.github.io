{"version":3,"sources":["resources/images/dan.jpg","components/icons/linkedin-icon.jsx","components/icons/github-icon.jsx","components/teaching/petri-graph/petri-graph.service.jsx","components/teaching/petri-graph/force-graph-generator.js","components/teaching/petri-graph/link.jsx","components/teaching/petri-graph/node.jsx","components/teaching/petri-graph/force-graph.jsx","components/teaching/petri-graph/petri-graph.jsx","pages/home/home.jsx"],"names":["module","exports","LinkedinIcon","aria-hidden","focusable","data-prefix","data-icon","className","role","xmlns","viewBox","fill","d","GithubIcon","PetriGraphService","N","initialMarking","c","this","getC","PN","j","places","length","col","i","transitions","push","post","pre","markings","vertices","newItemsExist","markingIndex","getIndexOfFirstNewItem","currentMarking","possibleTransitions","getPossibleTransitions","transitionIndex","nextMarking","getNextMarking","transition","id","nextMarkingIsNew","label","name","getNameForExistingMarking","from","to","items","result","marking","executableTransitions","isExecutable","tokens","index","transitionId","markingsAreEqual","m1","m2","FORCE","nsp","d3","updateNode","selection","attr","x","y","Math","max","min","width","height","updateLink","source","target","updateGraph","selectAll","call","dragStarted","active","force","alphaTarget","restart","fx","fy","dragging","dragEnded","enterNode","select","style","enterLink","initForce","nodes","links","strength","distance","iterations","drag","on","tick","that","d3Graph","ReactDOM","findDOMNode","Link","console","log","d3Link","datum","props","data","React","Component","Node","d3Node","onClick","addLink","ForceGraph","state","addLinkArray","handleAddNode","bind","addNode","prevProps","prevState","e","setState","value","preventDefault","map","link","key","node","onSubmit","onChange","placeholder","htmlFor","type","refX","refY","markerUnits","markerWidth","markerHeight","orient","Home","componentDidMount","VanillaTilt","init","document","querySelectorAll","speed","scale","glare","perspective","window","open"],"mappings":"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","file":"static/js/4.e8320ec0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dan.b368c9f9.jpg\";","import React from 'react';\nexport function LinkedinIcon() {\n  return (\n    <svg\n      aria-hidden=\"true\"\n      focusable=\"false\"\n      data-prefix=\"fab\"\n      data-icon=\"linkedin-in\"\n      className=\"svg-inline--fa fa-linkedin-in fa-w-14\"\n      role=\"img\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 448 512\"\n    >\n      <path\n        fill=\"currentColor\"\n        d=\"M100.28 448H7.4V148.9h92.88zM53.79 108.1C24.09 108.1 0 83.5 0 53.8a53.79 53.79 0 0 1 107.58 0c0 29.7-24.1 54.3-53.79 54.3zM447.9 448h-92.68V302.4c0-34.7-.7-79.2-48.29-79.2-48.29 0-55.69 37.7-55.69 76.7V448h-92.78V148.9h89.08v40.8h1.3c12.4-23.5 42.69-48.3 87.88-48.3 94 0 111.28 61.9 111.28 142.3V448z\"\n      ></path>\n    </svg>\n  );\n}\n","import React from 'react';\nexport function GithubIcon() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      aria-hidden=\"true\"\n      focusable=\"false\"\n      data-prefix=\"fab\"\n      data-icon=\"github\"\n      className=\"svg-inline--fa fa-github fa-w-16\"\n      role=\"img\"\n      viewBox=\"0 0 496 512\"\n    >\n      <path\n        fill=\"currentColor\"\n        d=\"M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z\"\n      />\n    </svg>\n  );\n}\n","class PetriGraphService {\r\n  PN;\r\n\r\n  constructor(N, initialMarking) {\r\n    // console.table(N);\r\n    let c = this.getC(N);\r\n    // console.table(c);\r\n    this.PN = { ...N, initialMarking: initialMarking, c: c };\r\n  }\r\n\r\n  getC(N) {\r\n    let c = [];\r\n    for (let j = 0; j < N.places.length; j++) {\r\n      let col = [];\r\n      for (let i = 0; i < N.transitions.length; i++) {\r\n        col.push(N.post[j][i] - N.pre[j][i]);\r\n      }\r\n      c.push(col);\r\n    }\r\n    return c;\r\n  }\r\n\r\n  get() {\r\n    let markings = [];\r\n    let vertices = [];\r\n    markings.push(this.PN.initialMarking);\r\n    let MAX = 100;\r\n    let i = 0;\r\n    while (this.newItemsExist(markings)) {\r\n      if (i < MAX) {\r\n        i++;\r\n      } else {\r\n        break;\r\n      }\r\n      let markingIndex = this.getIndexOfFirstNewItem(markings);\r\n      let currentMarking = markings[markingIndex];\r\n      let possibleTransitions = this.getPossibleTransitions(currentMarking);\r\n\r\n      while (this.newItemsExist(possibleTransitions)) {\r\n        let transitionIndex = this.getIndexOfFirstNewItem(possibleTransitions);\r\n\r\n        let nextMarking = this.getNextMarking(\r\n          markings.length,\r\n          possibleTransitions[transitionIndex].transition.id,\r\n          markings[markingIndex]\r\n        );\r\n        if (!this.nextMarkingIsNew(nextMarking, markings)) {\r\n          nextMarking.label = 'old';\r\n          nextMarking.name = this.getNameForExistingMarking(\r\n            nextMarking,\r\n            markings\r\n          );\r\n        } else {\r\n          markings.push(nextMarking);\r\n        }\r\n\r\n        possibleTransitions[transitionIndex].label = 'old';\r\n        vertices.push({\r\n          from: currentMarking.name,\r\n          to: nextMarking.name,\r\n          transition: possibleTransitions[transitionIndex].transition.name\r\n        });\r\n      }\r\n      markings[markingIndex].label = 'old';\r\n    }\r\n\r\n    return { vertices: vertices, markings: markings };\r\n  }\r\n\r\n  newItemsExist(items) {\r\n    let result = false;\r\n    for (let i = 0; i < items.length; i++) {\r\n      if (items[i].label === 'new') {\r\n        result = true;\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  getIndexOfFirstNewItem(items) {\r\n    let result = 0;\r\n    for (let i = 0; i < items.length; i++) {\r\n      if (items[i].label === 'new') {\r\n        result = i;\r\n        break;\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  getPossibleTransitions(marking) {\r\n    let executableTransitions = [];\r\n    for (let j = 0; j < this.PN.transitions.length; j++) {\r\n      let isExecutable = true;\r\n      for (let i = 0; i < this.PN.places.length; i++) {\r\n        if (marking.tokens[i] < this.PN.pre[i][j]) {\r\n          isExecutable = false;\r\n        }\r\n      }\r\n      if (isExecutable) {\r\n        executableTransitions.push({\r\n          transition: this.PN.transitions[j],\r\n          label: 'new'\r\n        });\r\n      }\r\n    }\r\n\r\n    return executableTransitions;\r\n  }\r\n\r\n  getNextMarking(index, transitionId, marking) {\r\n    let nextMarking = {\r\n      name: 'M' + index,\r\n      tokens: [],\r\n      label: 'new'\r\n    };\r\n    for (let i = 0; i < this.PN.places.length; i++) {\r\n      nextMarking.tokens[i] = marking.tokens[i] + this.PN.c[i][transitionId];\r\n    }\r\n    return nextMarking;\r\n  }\r\n\r\n  nextMarkingIsNew(nextMarking, markings) {\r\n    let result = true;\r\n    for (let i = 0; i < markings.length; i++) {\r\n      if (this.markingsAreEqual(nextMarking, markings[i])) {\r\n        result = false;\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  getNameForExistingMarking(nextMarking, markings) {\r\n    let name = nextMarking.name;\r\n    for (let i = 0; i < markings.length; i++) {\r\n      if (this.markingsAreEqual(nextMarking, markings[i])) {\r\n        name = markings[i].name;\r\n      }\r\n    }\r\n    return name;\r\n  }\r\n\r\n  markingsAreEqual(m1, m2) {\r\n    let result = true;\r\n    for (let i = 0; i < m1.tokens.length; i++) {\r\n      if (m1.tokens[i] !== m2.tokens[i]) {\r\n        result = false;\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n}\r\nexport default PetriGraphService;\r\n","import * as d3 from 'd3';\r\nimport ReactDOM from 'react-dom';\r\nlet FORCE = function (nsp) {\r\n  const width = 1080,\r\n    height = 250,\r\n    color = d3.scaleOrdinal(d3.schemeCategory10),\r\n    initForce = (nodes, links) => {\r\n      nsp.force = d3\r\n        .forceSimulation(nodes)\r\n        .force('charge', d3.forceManyBody().strength(-200))\r\n        .force('link', d3.forceLink(links).distance(170))\r\n        .force(\r\n          'center',\r\n          d3\r\n            .forceCenter()\r\n            .x(nsp.width / 2)\r\n            .y(nsp.height / 2)\r\n        )\r\n        .force('collide', d3.forceCollide([5]).iterations([5]));\r\n    },\r\n    enterNode = selection => {\r\n      const circle = selection\r\n        .select('circle')\r\n        .attr('r', 25)\r\n        .style('fill', function (d) {\r\n          if (d.id > 3) {\r\n            return 'darkcyan';\r\n          } else {\r\n            return 'tomato';\r\n          }\r\n        })\r\n        //.style('fill-opacity', 0) //to be deleted\r\n        .style('stroke', 'bisque')\r\n        .style('stroke-width', '1px');\r\n\r\n      selection\r\n        .select('text')\r\n        .style('fill', 'honeydew')\r\n        .style('font-weight', '300')\r\n        .style('text-transform', 'uppercase')\r\n        .style('text-anchor', 'middle')\r\n        .style('alignment-baseline', 'middle')\r\n        .style('font-size', '18px')\r\n        .style('font-family', 'cursive');\r\n    },\r\n    updateNode = selection => {\r\n      selection\r\n        .attr('transform', d => 'translate(' + d.x + ',' + d.y + ')')\r\n        .attr('cx', function (d) {\r\n          return (d.x = Math.max(30, Math.min(width - 30, d.x)));\r\n        })\r\n        .attr('cy', function (d) {\r\n          return (d.y = Math.max(30, Math.min(height - 30, d.y)));\r\n        })\r\n        .attr('id', d => 'node-' + d.id);\r\n    },\r\n    enterLink = selection => {\r\n      selection\r\n        .select('line')\r\n        .attr('stroke-width', 2)\r\n        .attr('stroke', 'bisque')\r\n        .attr('marker-end', 'url(#arrowhead)');\r\n\r\n      selection\r\n        .select('text')\r\n        .attr('text-anchor', 'middle')\r\n        .attr('x', 66)\r\n        .attr('font-size', '20')\r\n        .attr('y', 66)\r\n        .attr('fill', 'white');\r\n    },\r\n    updateLink = selection => {\r\n      selection\r\n        .attr('x1', d => d.source.x)\r\n        .attr('y1', d => d.source.y)\r\n        .attr('x2', d => d.target.x)\r\n        .attr('y2', d => d.target.y)\r\n        .attr('id', d => 'link-' + d.id);\r\n    },\r\n    updateGraph = selection => {\r\n      selection.selectAll('.node').call(updateNode);\r\n      selection.selectAll('.link').call(updateLink);\r\n    },\r\n    dragStarted = d => {\r\n      if (!d3.event.active) nsp.force.alphaTarget(0.3).restart();\r\n      d.fx = d.x;\r\n      d.fy = d.y;\r\n    },\r\n    dragging = d => {\r\n      d.fx = d3.event.x;\r\n      d.fy = d3.event.y;\r\n    },\r\n    dragEnded = d => {\r\n      if (!d3.event.active) nsp.force.alphaTarget(0);\r\n      d.fx = null;\r\n      d.fy = null;\r\n    },\r\n    drag = () =>\r\n      d3\r\n        .selectAll('g.node')\r\n        .call(\r\n          d3\r\n            .drag()\r\n            .on('start', dragStarted)\r\n            .on('drag', dragging)\r\n            .on('end', dragEnded)\r\n        ),\r\n    tick = that => {\r\n      that.d3Graph = d3.select(ReactDOM.findDOMNode(that));\r\n      nsp.force.on('tick', () => {\r\n        that.d3Graph.call(updateGraph);\r\n      });\r\n    };\r\n\r\n  nsp.width = width;\r\n  nsp.height = height;\r\n  nsp.enterNode = enterNode;\r\n  nsp.updateNode = updateNode;\r\n  nsp.enterLink = enterLink;\r\n  nsp.updateLink = updateLink;\r\n  nsp.updateGraph = updateGraph;\r\n  nsp.initForce = initForce;\r\n  nsp.dragStarted = dragStarted;\r\n  nsp.dragging = dragging;\r\n  nsp.dragEnded = dragEnded;\r\n  nsp.drag = drag;\r\n  nsp.tick = tick;\r\n\r\n  return nsp;\r\n};\r\n\r\nexport default FORCE;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport FORCE from './force-graph-generator';\r\nimport { select } from 'd3-selection';\r\n\r\nclass Link extends React.Component {\r\n  componentDidMount() {\r\n    FORCE(FORCE || {});\r\n    console.log(select(ReactDOM.findDOMNode(this)));\r\n    this.d3Link = select(ReactDOM.findDOMNode(this))\r\n      .datum(this.props.data)\r\n      .call(FORCE.enterLink);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.d3Link.datum(this.props.data).call(FORCE.updateLink);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <g>\r\n        <line className=\"link\" />\r\n        <text> t1werewrewrewr </text>\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Link;\r\n","import React from 'react';\r\nimport * as d3 from 'd3';\r\nimport ReactDOM from 'react-dom';\r\nimport FORCE from './force-graph-generator';\r\n\r\nclass Node extends React.Component {\r\n  componentDidMount() {\r\n    this.d3Node = d3\r\n      .select(ReactDOM.findDOMNode(this))\r\n      .datum(this.props.data)\r\n      .call(FORCE.enterNode);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.d3Node.datum(this.props.data).call(FORCE.updateNode);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <g className=\"node\">\r\n        <circle onClick={this.props.addLink} />{' '}\r\n        <text> {this.props.data.name} </text>{' '}\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Node;\r\n","import './force-graph.scss';\r\nimport React, { Component } from 'react';\r\nimport FORCE from './force-graph-generator';\r\nimport './force-graph.scss';\r\nimport Link from './link';\r\nimport Node from './node';\r\n\r\nclass ForceGraph extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    FORCE(FORCE || {});\r\n    this.state = {\r\n      addLinkArray: [],\r\n      name: '',\r\n      nodes: [\r\n        {\r\n          name: '100',\r\n          id: 0\r\n        },\r\n        {\r\n          name: '010',\r\n          id: 1\r\n        },\r\n        {\r\n          name: '011',\r\n          id: 2\r\n        },\r\n        {\r\n          name: '001',\r\n          id: 3\r\n        }\r\n      ],\r\n      links: [\r\n        {\r\n          source: 0,\r\n          target: 1,\r\n          id: 0\r\n        },\r\n        {\r\n          source: 0,\r\n          target: 2,\r\n          id: 1\r\n        },\r\n        {\r\n          source: 0,\r\n          target: 3,\r\n          id: 2\r\n        }\r\n      ]\r\n    };\r\n    this.handleAddNode = this.handleAddNode.bind(this);\r\n    this.addNode = this.addNode.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const data = this.state;\r\n    FORCE.initForce(data.nodes, data.links);\r\n    FORCE.tick(this);\r\n    FORCE.drag();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (\r\n      prevState.nodes !== this.state.nodes ||\r\n      prevState.links !== this.state.links\r\n    ) {\r\n      const data = this.state;\r\n      FORCE.initForce(data.nodes, data.links);\r\n      FORCE.tick(this);\r\n      FORCE.drag();\r\n    }\r\n  }\r\n\r\n  handleAddNode(e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  }\r\n\r\n  addNode(e) {\r\n    e.preventDefault();\r\n    this.setState(prevState => ({\r\n      nodes: [\r\n        ...prevState.nodes,\r\n        {\r\n          name: this.state.name,\r\n          id: prevState.nodes.length + 1,\r\n          x: FORCE.width / 2,\r\n          y: FORCE.height / 2\r\n        }\r\n      ],\r\n      name: ''\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    var links = this.state.links.map(link => {\r\n      return <Link key={link.id} data={link} />;\r\n    });\r\n    var nodes = this.state.nodes.map(node => {\r\n      return <Node data={node} name={node.name} key={node.id} />;\r\n    });\r\n    return (\r\n      <div className=\"graph__container\">\r\n        <form className=\"form-addSystem\" onSubmit={this.addNode.bind(this)}>\r\n          <h4 className=\"form-addSystem__header\"> New Node </h4>\r\n          <div className=\"form-addSystem__group\">\r\n            <input\r\n              value={this.state.name}\r\n              onChange={this.handleAddNode.bind(this)}\r\n              name=\"name\"\r\n              className=\"form-addSystem__input\"\r\n              id=\"name\"\r\n              placeholder=\"Name\"\r\n            />\r\n            <label className=\"form-addSystem__label\" htmlFor=\"title\">\r\n              {' '}\r\n              Name{' '}\r\n            </label>\r\n          </div>{' '}\r\n          <div className=\"form-addSystem__group\">\r\n            <input className=\"btnn\" type=\"submit\" value=\"add node\" />\r\n          </div>{' '}\r\n        </form>\r\n        <svg className=\"graph\" width={FORCE.width} height={FORCE.height}>\r\n          <defs>\r\n            <marker\r\n              id=\"arrowhead\"\r\n              viewBox=\"0 0 10 10\"\r\n              refX=\"22\"\r\n              refY=\"5\"\r\n              markerUnits=\"strokeWidth\"\r\n              markerWidth=\"10\"\r\n              markerHeight=\"10\"\r\n              orient=\"auto\"\r\n            >\r\n              <path d=\"M 0 0 L 10 5 L 0 10 z\" fill=\"orange\" />\r\n            </marker>\r\n          </defs>\r\n          <g> {links} </g> <g> {nodes} </g>{' '}\r\n        </svg>{' '}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ForceGraph;\r\n","import React, { Component } from 'react';\r\nimport './petri-graph.scss';\r\nimport PetriGraphService from './petri-graph.service';\r\nimport ForceGraph from './force-graph';\r\n\r\nclass PetriGraph extends Component {\r\n  render() {\r\n    let transitions = [\r\n      { id: 0, name: 't1', t1: 2, t2: 3 },\r\n      { id: 1, name: 't2', t1: 1, t2: 3 },\r\n      { id: 2, name: 't3', t1: 2, t2: 7 },\r\n      { id: 3, name: 't4', t1: 4, t2: 5 }\r\n    ];\r\n\r\n    let places = [\r\n      { id: 0, name: 'p1' },\r\n      { id: 1, name: 'p2' },\r\n      { id: 2, name: 'p3' },\r\n      { id: 3, name: 'p4' },\r\n      { id: 4, name: 'p5' }\r\n    ];\r\n\r\n    let pre = [\r\n      [1, 0, 0, 0],\r\n      [0, 1, 0, 0],\r\n      [0, 0, 1, 0],\r\n      [0, 0, 0, 1],\r\n      [0, 0, 0, 1]\r\n    ];\r\n\r\n    let post = [\r\n      [0, 0, 0, 1],\r\n      [1, 0, 0, 0],\r\n      [1, 0, 0, 0],\r\n      [0, 1, 0, 0],\r\n      [0, 0, 1, 0]\r\n    ];\r\n\r\n    let initialMarking = { name: 'M0', tokens: [1, 0, 0, 0, 0], label: 'new' };\r\n    let N = { places: places, transitions: transitions, pre: pre, post: post };\r\n    let service = new PetriGraphService(N, initialMarking);\r\n    let result = service.get();\r\n    return (\r\n      <div>\r\n        <ForceGraph data={result} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default PetriGraph;\r\n","import React, { Component } from 'react';\r\nimport './home.scss';\r\nimport VanillaTilt from 'vanilla-tilt';\r\nimport LazyLoad from 'react-lazyload';\r\nimport { LinkedinIcon } from '../../components/icons/linkedin-icon';\r\nimport { GithubIcon } from '../../components/icons/github-icon';\r\nimport PetriGraph from '../../components/teaching/petri-graph/petri-graph';\r\n\r\nfunction MyImage() {\r\n  return (\r\n    <div className=\"image\">\r\n      <LazyLoad once>\r\n        <img alt=\"Profile\" src={require('../../resources/images/dan.jpg')} />\r\n      </LazyLoad>\r\n    </div>\r\n  );\r\n}\r\n\r\nclass Home extends Component {\r\n  componentDidMount = function () {\r\n    VanillaTilt.init(document.querySelectorAll('.tech-logo-img, .social'), {\r\n      max: 10,\r\n      speed: 400,\r\n      scale: 1.2,\r\n      glare: 0.5,\r\n      perspective: 500\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"home-container\">\r\n        <div className=\"container\">\r\n          {/*<MyImage />*/}\r\n          <div className=\"description\">\r\n            <p className=\"my-description\">\r\n              My name is <b>Dan Radu</b>, I'm a{' '}\r\n              <b>fullstack Software Developer</b> based in Cluj-Napoca, Romania.\r\n            </p>\r\n            <p>\r\n              I have over 12 years of programming experience and previously\r\n              worked with a wide range of software technologies and\r\n              architectures, both on desktop and web applications. I've been\r\n              programming on the web with:{' '}\r\n              <b>\r\n                JavaScript, Angular, ReactJS, CSS, HTML, REST API's, Java\r\n                (Spring boot, Hibernate, Flyway/Liquibase), C#, PHP, SQL, Git.\r\n              </b>\r\n              {/*I also have experience with the Agile process and understand the benefits of using the CI/CD (Jenkins, Docker, AWS) pipeline.*/}\r\n            </p>\r\n            {/*<div className=\"tech-container\">\r\n                    <div className=\"tech-logo\"><img alt=\"JavaScript\" className=\"tech-logo-img\" src={require(\"../../resources/images/javascript.png\")} /></div>\r\n                    <div className=\"tech-logo\"><img alt=\"Angular\" className=\"tech-logo-img\" src={require(\"../../resources/images/angular.png\")} /></div>\r\n                    <div className=\"tech-logo\"><img alt=\"Spring boot\" className=\"tech-logo-img\" src={require(\"../../resources/images/spring-boot.png\")} /></div>\r\n                    <div className=\"tech-logo\"><img alt=\"Git\" className=\"tech-logo-img\" src={require(\"../../resources/images/git.png\")} /></div>\r\n                    </div>*/}\r\n            {/*<p>I am a lecturer at the <b>Technical University of Cluj-Napoca</b> since 2012 when I defended my PhD thesis called\r\n                        \"<b>Efficient Routing Strategies for Mobile Ad Hoc Networks</b>\". </p>*/}\r\n\r\n            <div className=\"social-icons\">\r\n              <div\r\n                onClick={() =>\r\n                  window.open(\r\n                    'https://www.linkedin.com/in/dan-radu-74a80563/',\r\n                    '_blank'\r\n                  )\r\n                }\r\n              >\r\n                <LinkedinIcon />\r\n              </div>\r\n              <div\r\n                onClick={() =>\r\n                  window.open('https://github.com/xdanradu', '_blank')\r\n                }\r\n              >\r\n                <GithubIcon />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* <PetriGraph />*/}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n"],"sourceRoot":""}