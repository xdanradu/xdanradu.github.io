{"version":3,"sources":["components/icons/chevron-down-icon.jsx","components/accordion-item/accordion-item.jsx","components/icons/chevron-up-icon.jsx","pages/skills/skills.jsx","components/card/card.jsx","pages/shop/shop.jsx","App.jsx","redux-store/actions.js","redux-store/actionTypes.js","serviceWorker.js","redux-store/store.js","index.jsx","redux-store/reducers.js"],"names":["ChevronDownIcon","aria-hidden","focusable","data-prefix","data-icon","className","role","xmlns","viewBox","fill","d","AccordionItemCode","props","code","style","display","id","AccordionItemToggleButton","AccordionItem","Prism","highlightAll","container","document","getElementById","containerIcon","opacity","innerHTML","ReactDOMServer","renderToString","data","this","title","onClick","e","toggle","length","Component","Skills","SOLID","map","item","key","Badge","value","Card","position","description","counter","onIncrement","Shop","counters","NavBar","lazy","Home","App","fallback","onDecrement","decremented","incremented","onReset","reseted","onCleared","cleared","exact","path","onCreate","created","onDelete","deleted","mapDispatchToProps","type","payload","connect","state","Boolean","window","location","hostname","match","store","user","name","createStore","action","incCounters","index","indexOf","decCounters","decIndex","produce","draft","push","nextId","reduce","prev","curr","rCounters","rIndex","cCounters","i","console","log","splice","findIndex","c","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b895b985.chunk.js","sourcesContent":["import React from 'react';\nexport function ChevronDownIcon() {\n  return (\n    <svg\n      aria-hidden=\"true\"\n      focusable=\"false\"\n      data-prefix=\"fas\"\n      data-icon=\"chevron-down\"\n      className=\"svg-inline--fa fa-chevron-down fa-w-14\"\n      role=\"img\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 448 512\"\n    >\n      <path\n        fill=\"currentColor\"\n        d=\"M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z\"\n      ></path>\n    </svg>\n  );\n}\n","import React, { Component } from 'react';\nimport './accordion-item.scss';\nimport Prism from 'prismjs';\nimport ReactDOMServer from 'react-dom/server';\nimport { ChevronDownIcon } from '../icons/chevron-down-icon';\nimport { ChevronUpIcon } from '../icons/chevron-up-icon';\n\nfunction AccordionItemCode(props) {\n  let { code } = props;\n  if (code)\n    return (\n      <pre style={{ display: 'none' }} id=\"solid\">\n        <code className=\"language-javascript\">{code}</code>\n      </pre>\n    );\n  return '';\n}\nfunction AccordionItemToggleButton(props) {\n  let { display } = props;\n  if (display)\n    return (\n      <div id=\"solid-icon\" className=\"toggle-chevron\">\n        <ChevronDownIcon />\n      </div>\n    );\n  return '';\n}\n\nclass AccordionItem extends Component {\n  componentDidMount() {\n    Prism.highlightAll();\n  }\n\n  toggle(id) {\n    let container = document.getElementById(id);\n    let containerIcon = document.getElementById(id + '-icon');\n    if (container.style.display === 'none') {\n      container.style.display = 'block';\n      container.style.opacity = '1';\n      containerIcon.innerHTML = ReactDOMServer.renderToString(ChevronUpIcon());\n    } else {\n      container.style.display = 'none';\n      container.style.opacity = '0';\n      containerIcon.innerHTML = ReactDOMServer.renderToString(\n        ChevronDownIcon()\n      );\n    }\n  }\n\n  render() {\n    let { data } = this.props;\n    return (\n      <div>\n        <h2>\n          {data.title}{' '}\n          <span onClick={e => this.toggle('solid')}>\n            <AccordionItemToggleButton\n              display={data.code && data.code.length > 0 ? true : false}\n            />\n          </span>\n        </h2>\n        <AccordionItemCode code={data.code} />\n      </div>\n    );\n  }\n}\n\nexport default AccordionItem;\n","import React from 'react';\nexport function ChevronUpIcon() {\n  return (\n    <svg\n      aria-hidden=\"true\"\n      focusable=\"false\"\n      data-prefix=\"fas\"\n      data-icon=\"chevron-up\"\n      className=\"svg-inline--fa fa-chevron-up fa-w-14\"\n      role=\"img\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 448 512\"\n    >\n      <path\n        fill=\"currentColor\"\n        d=\"M240.971 130.524l194.343 194.343c9.373 9.373 9.373 24.569 0 33.941l-22.667 22.667c-9.357 9.357-24.522 9.375-33.901.04L224 227.495 69.255 381.516c-9.379 9.335-24.544 9.317-33.901-.04l-22.667-22.667c-9.373-9.373-9.373-24.569 0-33.941L207.03 130.525c9.372-9.373 24.568-9.373 33.941-.001z\"\n      ></path>\n    </svg>\n  );\n}\n","import React, { Component } from 'react';\nimport './skills.scss';\nimport '../../resources/styles/prism.css';\nimport AccordionItem from '../../components/accordion-item/accordion-item';\nimport SOLID from '../../data/solid';\n\nclass Skills extends Component {\n  render() {\n    return (\n      <div className=\"skills-container\">\n        <h1>SOLID Principles</h1>\n        {SOLID.map(item => (\n          <AccordionItem key={item.title} data={item} />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Skills;\n","import React, { Component } from 'react';\nimport './card.scss';\n\nfunction Badge(props) {\n  let { value } = props;\n  if (value > 0) return <div className=\"counter-badge\">{value}</div>;\n  return '';\n}\n\nclass Card extends Component {\n  render() {\n    let { position, title, description, counter, onIncrement } = this.props;\n    return (\n      <div className=\"card\">\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <div className=\"content\">\n          <Badge value={counter.value} />\n\n          <h2>{position}</h2>\n          <h3>{title}</h3>\n          <p>{description}</p>\n          <button className=\"noselect\" onClick={() => onIncrement(counter)}>\n            Add to cart\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Card;\n","import React, { Component } from 'react';\nimport './shop.scss';\nimport Card from '../../components/card/card';\n\nclass Shop extends Component {\n  render() {\n    let { counters, onIncrement } = this.props;\n    return (\n      <div className=\"card-container\">\n        <Card\n          position=\"01\"\n          title=\"JavaScript\"\n          description=\"Angular, React, jQuery, NodeJS\"\n          counter={counters[0]}\n          onIncrement={onIncrement}\n        />\n        <Card\n          position=\"02\"\n          title=\"HTML/CSS\"\n          description=\"Responsive UI\"\n          counter={counters[1]}\n          onIncrement={onIncrement}\n        />\n        <Card\n          position=\"03\"\n          title=\"Java\"\n          description=\"Spring boot, JWT, Hibernate, Flyway\"\n          counter={counters[2]}\n          onIncrement={onIncrement}\n        />\n        <Card\n          position=\"04\"\n          title=\"C#\"\n          description=\"WCF, Rest API, 3 Tier Architecture\"\n          counter={counters[3]}\n          onIncrement={onIncrement}\n        />\n        <Card\n          position=\"05\"\n          title=\"SQL\"\n          description=\"PosgreSQL, SQL Server, MySQL, Stored Procedures, Triggers\"\n          counter={counters[4]}\n          onIncrement={onIncrement}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Shop;\n","import React, { Component, lazy, Suspense } from 'react';\nimport Skills from './pages/skills/skills';\nimport './App.css';\nimport { connect } from 'react-redux';\nimport {\n  decremented,\n  incremented,\n  created,\n  reseted,\n  deleted,\n  cleared\n} from './redux-store/actions';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Shop from './pages/shop/shop';\n\nconst NavBar = lazy(() => import('./components/navbar/navbar'));\nconst Home = lazy(() => import('./pages/home/home'));\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <Suspense fallback={<div>Loading... </div>}>\n          <NavBar\n            counters={this.props.counters}\n            onDecrement={this.props.decremented}\n            onIncrement={this.props.incremented}\n            onReset={this.props.reseted}\n            onCleared={this.props.cleared}\n          />\n        </Suspense>\n\n        <div className=\"page-layout\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Suspense fallback={<div>Loading... </div>}>\n                <Home />\n              </Suspense>\n            </Route>\n            <Route exact path=\"/skills\">\n              <Skills />\n            </Route>\n            <Route exact path=\"/shop\">\n              <Shop\n                onCreate={this.props.created}\n                onReset={this.props.reseted}\n                onIncrement={this.props.incremented}\n                onDecrement={this.props.incremented}\n                onDelete={this.props.deleted}\n                counters={this.props.counters}\n              />\n            </Route>\n          </Switch>\n        </div>\n        <div id=\"bottom-menu\">&copy; 2020</div>\n      </Router>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    counters: state.counters\n  };\n};\n\nconst mapDispatchToProps = {\n  decremented,\n  incremented,\n  created,\n  reseted,\n  deleted,\n  cleared\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import {\n  DECREMENTED,\n  INCREMENTED,\n  CREATED,\n  RESETED,\n  DELETED,\n  CLEARED\n} from './actionTypes';\n\nexport const incremented = counter => ({\n  type: INCREMENTED,\n  payload: {\n    counter: counter\n  }\n});\n\nexport const decremented = counter => ({\n  type: DECREMENTED,\n  payload: {\n    counter: counter\n  }\n});\n\nexport const created = () => ({\n  type: CREATED\n});\n\nexport const reseted = counter => ({\n  type: RESETED,\n  payload: {\n    counter: counter\n  }\n});\n\nexport const deleted = id => ({\n  type: DELETED,\n  payload: {\n    id: id\n  }\n});\n\nexport const cleared = () => ({\n  type: CLEARED\n});\n","export const INCREMENTED = 'incremented';\nexport const DECREMENTED = 'decremented';\nexport const CREATED = 'created';\nexport const RESETED = 'reseted';\nexport const DELETED = 'deleted';\nexport const CLEARED = 'cleared';\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const store = {\n  user: {\n    name: ''\n  },\n  counters: [\n    { id: 1, value: 0, name: 'JavaScript' },\n    { id: 2, value: 0, name: 'HTML/CSS' },\n    { id: 3, value: 0, name: 'Java' },\n    { id: 4, value: 0, name: 'C#' },\n    { id: 5, value: 0, name: 'SQL' }\n  ]\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport reducer from './redux-store/reducers';\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {\n  DECREMENTED,\n  INCREMENTED,\n  CREATED,\n  RESETED,\n  DELETED,\n  CLEARED\n} from './actionTypes';\nimport { store } from './store';\nimport { produce } from 'immer';\n\nexport default function reducer(state, action) {\n  switch (action.type) {\n    case INCREMENTED:\n      const incCounters = [...state.counters];\n      const index = incCounters.indexOf(action.payload.counter);\n      incCounters[index] = { ...action.payload.counter };\n      incCounters[index].value += 1;\n      return { counters: incCounters };\n    case DECREMENTED:\n      const decCounters = [...state.counters];\n      const decIndex = decCounters.indexOf(action.payload.counter);\n      decCounters[decIndex] = { ...action.payload.counter };\n      if (decCounters[decIndex].value > 0) decCounters[decIndex].value -= 1;\n      return { counters: decCounters };\n    case CREATED:\n      return produce(state, draft => {\n        if (state.counters.length === 0)\n          draft.counters.push({ id: 1, value: 0 });\n        else {\n          const max = state.counters.reduce((prev, curr) =>\n            prev.id > curr.id ? prev : curr\n          );\n          const nextId = max.id + 1;\n          draft.counters.push({ id: nextId, value: 0 });\n        }\n      });\n    case RESETED:\n      const rCounters = [...state.counters];\n      const rIndex = rCounters.indexOf(action.payload.counter);\n      rCounters[rIndex] = { ...action.payload.counter };\n      rCounters[rIndex].value = 0;\n      return { counters: rCounters };\n    case CLEARED:\n      const cCounters = [...state.counters];\n      for (let i = 0; i < cCounters.length; i++) {\n        cCounters[i].value = 0;\n      }\n      return { counters: cCounters };\n    case DELETED:\n      console.log(action);\n      return produce(state, draft => {\n        draft.counters.splice(\n          draft.counters.findIndex(c => c.id === action.payload.id),\n          1\n        );\n      });\n    default:\n      break;\n  }\n\n  return store;\n}\n"],"sourceRoot":""}